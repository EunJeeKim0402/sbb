package com.mysite.sbb;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

@SpringBootTest
class SbbApplicationTests {
	
	@Autowired
	private QuestionRepository questionRepository;

	@Test
	void testJpa() {
		Optional<Question> oq = this.questionRepository.findById(1);
		assertTrue(oq.isPresent()); // assertTrue는 괄호 안희 값이 true인지 테스트함.
		Question q = oq.get();
		q.setSubject("수정된 제목");
		this.questionRepository.save(q);
	}

}

// 데이터 생성
//Question q1 = new Question();
//q1.setSubject("sbb가 무엇인가");
//q1.setContent("sbb에대해 알고싶음");
//q1.setCreateDate(LocalDateTime.now());
//this.questionRepository.save(q1);
//
//Question q2 = new Question();
//q2.setSubject("스프링부트 모델 질문입니다");
//q2.setContent("id는 자동생성되나요");
//q2.setCreateDate(LocalDateTime.now());
//this.questionRepository.save(q2);


// select * from 테이블
//List<Question> all = this.questionRepository.findAll();
//assertEquals(2, all.size());
// subject값으로 조회
//Question q = all.get(0);
//assertEquals("sbb가 무엇인가요?", q.getSubject());



// where id로 조회
//Optional<Question> oq = this.questionRepository.findById(1);
//if(oq.isPresent()) {
//	Question q = oq.get();
//	assertEquals("sbb가 무엇인가", q.getSubject());
//}


// 특정 subject, content의 데이터 조회
//Question q = this.questionRepository.findBySubjectAndContent("sbb가 무엇인가", "sbb에대해 알고싶음");
//assertEquals(1, q.getId());


// 제목에 like조건으로 조회
//List<Question> qList = this.questionRepository.findBySubjectLike("sbb%");
//Question q = qList.get(0);
//assertEquals("sbb가 무엇인가", q.getSubject());

// id가 1인걸 가져와서 있는지 확인하고(true) 있다면 그 객체의 제목을 수정하고 저장
//Optional<Question> oq = this.questionRepository.findById(1);
//assertTrue(oq.isPresent()); // assertTrue는 괄호 안희 값이 true인지 테스트함.
//Question q = oq.get();
//q.setSubject("수정된 제목");
//this.questionRepository.save(q);